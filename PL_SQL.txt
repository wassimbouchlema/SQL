1)
DECLARE
    CURSOR cur IS SELECT * FROM Customer;
BEGIN
    FOR rec IN cur LOOP
        dbms_output.put_line('Customers Details: ID: '
                            ||rec.Customer_id
                            ||' Name: '||rec.Customer_Name
                            ||' Telephone: '||rec.Customer_Tel);
    END LOOP;
END;
/
2)
CREATE OR REPLACE PS_Customer_Prodcut (v_customer_id Customer.Customer_id%TYPE) IS
CURSOR cur IS
SELECT Product_Name
FROM Orders
INNER JOIN Customer ON Orders.Customer_id = Customer.Customer_id
INNER JOIN Product ON Orders.Product_id = Product.Product_id
WHERE v_customer_id = Customer_id;
BEGIN
FOR rec IN cur LOOP
dbms_output.put_line('Products: '||rec.Product_Name);
END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
dbms_output.put_line('No products returned or customer not found');
END;
/
3)

CREATE OR REPLACE FUNCTION FN_Customer_Orders (v_costumer_id Customer.Customer_id%type) RETURN number IS nb_orders 
BEGIN
SELECT count(*) into nb_orders FROM Customer WHERE
Customer_id=v_Customer_id ;
	RETURN nb_orders ;
END ;
/
4)
BEFORE UPDATE ON Orders FOR EACH ROW
BEGIN 
	IF( :new.OrderDate>=SYSDATE) THEN
	RAISE_APPLICATION_ERROR (-20567 ,
	‘Order Date must be greater than or equal to today's date’) ;
END IF ;
END ;
/
